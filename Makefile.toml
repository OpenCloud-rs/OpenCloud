# ---- BUILD ----

[tasks.build]
description = "Build client and server"
clear = true
workspace = false
dependencies = ["build_client", "build_server"]

[tasks.build_release]
extend = "build"
description = "Build client and server in release mode"
dependencies = ["build_client_release", "build_server_release"]

[tasks.build_client]
description = "Build client"
workspace = false
install_crate = { crate_name = "wasm-pack", binary = "wasm-pack", test_arg = "-V" }
command = "wasm-pack"
args = ["build", "client", "--target", "web", "--out-name", "package", "--dev"]

[tasks.build_client_release]
extend = "build_client"
description = "Build client in release mode"
args = ["build", "client", "--target", "web", "--out-name", "package", "--release"]

[tasks.build_server]
description = "Build server"
workspace = false
command = "cargo"
args = ["build", "--package", "server"]

[tasks.build_server_release]
extend = "build_server"
description = "Build server in release mode"
args = ["build", "--package", "server", "--release"]

# ---- START ----

[tasks.start]
description = "Build and start Actix server with client on port 8000"
workspace = false
command = "cargo"
args = ["run", "--package", "server"]
dependencies = ["build"]

[tasks.run]
alias="start"

[tasks.start_release]
extend = "start"
description = "Build and start Actix server with client on port 8000 in release mode"
args = ["run", "--package", "server", "--release"]
dependencies = ["build_release"]

[tasks.run_release]
alias="start_release"

# ---- LINT ----

[tasks.fmt]
description = "Format with rustfmt"
workspace = false
install_crate = { crate_name = "rustfmt-nightly", rustup_component_name = "rustfmt", binary = "rustfmt", test_arg = "--help" }
command = "cargo"
args = ["fmt", "--all"]

[tasks.fmt_check]
extend = "fmt"
description = "Check format with rustfmt"
args = ["fmt", "--all", "--", "--check"]

[tasks.clippy]
description = "Lint with Clippy"
clear = true
workspace = false
install_crate = { rustup_component_name = "clippy", binary = "cargo-clippy", test_arg = "--help" }
command = "cargo"
args = ["clippy", "--all-features", "--", "--deny", "clippy::all", "--deny", "clippy::pedantic", "--deny", "clippy::nursery"]
